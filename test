#!/usr/bin/env python3.3

import sys, time, uuid, requests, string, random, re

endpoint = sys.argv[1]

ENDC  = '\033[0m'
RED   = '\033[31m'
GREEN = '\033[32m'

def test(msg=''):
  msg = msg[0:15]
  sys.stdout.write("%s " % msg.ljust(15, '.'))

def fail(msg):
  sys.stdout.write("%sFAIL%s: %s\n" % (RED, ENDC, msg))
  sys.exit(1)

def okay(msg):
  if msg:
    sys.stdout.write("%sOKAY%s: %s\n" % (GREEN, ENDC, msg))
  else:
    sys.stdout.write("%sOKAY%s\n" % (GREEN, ENDC))

def request(method, path, expected_status, expected_text_pattern):
  test('%s %s' % (method.ljust(10), expected_status))
  r = requests.request(method, '%s/%s' % (endpoint, path))
  r.status_code == expected_status or fail('%s - %s' % (r.status_code, r.text.strip()))
  re.match(expected_text_pattern, r.text) or fail('%s - %s' % (r.status_code, r.text.strip()))
  okay('%s - %s' % (r.status_code, r.text.strip()[0:15]))
  return r.text

def token(length):
  return ''.join(random.choice(string.digits + string.ascii_letters) for _ in range(length))

request('GET', '/', 200, '.*DOCTYPE html.*')
